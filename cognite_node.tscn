[gd_scene load_steps=7 format=3 uid="uid://cpwg601o5cdp5"]

[ext_resource type="Script" path="res://addons/cognite/node/cognite_node.gd" id="1_uxnlv"]
[ext_resource type="Script" path="res://addons/cognite/node/assemble.gd" id="2_0qdc8"]
[ext_resource type="Script" path="res://addons/cognite/node/source.gd" id="3_lqkth"]

[sub_resource type="Resource" id="Resource_k2jsa"]
script = ExtResource("3_lqkth")
triggers = Array[String](["c"])
conditions = Array[String](["aaaaaaa"])
ranges = Array[String](["asd"])
states = Array[String](["A", "B"])

[sub_resource type="Resource" id="Resource_d1kqv"]
script = ExtResource("2_0qdc8")
nodes = {
3446493218605: {
"position": Vector2(-300, -20),
"right_connections": {
2633804873936: Vector2i(0, 0),
3501337937769: Vector2i(0, 0),
5958965198922: Vector2i(0, 0),
10377261809729: Vector2i(0, 0)
},
"state": 1,
"type": 0
},
3467364074167: {
"change_state": 2,
"position": Vector2(340, 20),
"right_connections": {},
"type": 2
},
4239015346105: {
"change_state": 1,
"position": Vector2(340, -140),
"right_connections": {},
"type": 2
},
10377261809729: {
"bigger": 0.005,
"position": Vector2(-40, -60),
"range": 1,
"right_connections": {
3467364074167: Vector2i(1, 0),
4239015346105: Vector2i(0, 0)
},
"smaller": 0.007,
"type": 4
}
}
source = SubResource("Resource_k2jsa")

[sub_resource type="GDScript" id="GDScript_gh0po"]
script/source = "extends Node

enum State {STATELESS, A, B}

signal state_changed(state)
signal c


## Change this property to something other than STATELESS to make your system work. STATELESS is a disable condition.
@export var current_state: State

@onready var initial_state = current_state

## Node that will be observed, this node must contain the methods and properties that CogniteBehavior will access
@export var Main_node: Node

@export_group(\"States Behavior\")
@export var a_behavior: CogniteBehavior
@export var b_behavior: CogniteBehavior

var current_states_behavior: CogniteBehavior

var states_behavior := {
	State.A: a_behavior,
	State.B: b_behavior,
}

var asd: float

var aaaaaaa: bool
var is_active := true

func _ready():
	pass


func _process(delta):
	if current_states_behavior:
		current_states_behavior.process(delta)

	if current_state == State.A:
		if asd > 0.005:
			change_state(State.A)
		if asd < 0.007:
			change_state(State.B)


func _physics_process(delta):
	if current_states_behavior:
		current_states_behavior.physics_process(delta)


func change_state(new_state):
	if new_state == current_state:
		return
	
	if not is_active:
		current_state = State.STATELESS
	
	current_states_behavior = null
	if states_behavior[new_state]:
		current_states_behavior = states_behavior[new_state]
		current_states_behavior.start()
	
	current_state = new_state
	state_changed.emit(current_state)



"

[node name="CogniteNode" type="Node"]
script = ExtResource("1_uxnlv")
cognite_assemble_root = SubResource("Resource_d1kqv")

[node name="ROOT2" type="Node" parent="."]
script = SubResource("GDScript_gh0po")
